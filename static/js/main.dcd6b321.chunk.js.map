{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["axios","require","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","sem","year","modules","info","undefined","yourmods","mcs","autocomplete","error","handleChange","bind","assertThisInitialized","handleSubmit","handleClick","selectSem","selectYear","n","temp","i","blacklist","obj","JSON","parse","stringify","map","prop","_this2","constructor","Array","elem","react_default","a","createElement","convert","keys","key","_this3","onClick","delMod","name","makePlan","concat","currmods","first","mod","second","_this4","url","console","log","get","then","response","setState","data","catch","_this5","search","modMavenTree","replace","_this6","indexOf","or","reduce","acc","parseBoolTree","and","preclusions","ParsedPreclusion","prereqs","ParsedPrerequisite","filter","currmod","length","getCurrMods","checkDuplicates","checkPreclusion","checkPrereqs","Sem 1","Sem 2","ModuleCredit","parseInt","event","target","_this7","type","ModuleCode","addMod","toUpperCase","modcodes","results","RegExp","test","slice","preventDefault","_this8","mmTree","Preclusions","Prerequisites","Needed by","LockedModules","className","onSubmit","onChange","id","range","style","color","result","filterObjProps","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dcd6b321.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nconst axios = require('axios');\n\n// TODO\n// Check for prereqs, preclusion, mcs(overloading), basic requirements\n// Delete mods, sort chronologically\n// Some bugs in the ParsedPrerequisite Tree: Should be or but instead it's and eg: MA1521, MA1102R\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: 'Search',\n                  sem: '1',\n                  year: '2018-2019',\n                  modules: [],\n                  info: undefined,\n                  yourmods: {},\n                  mcs: 0,\n                  autocomplete: [],\n                  error: \"\"\n                };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.selectSem = this.selectSem.bind(this);\n    this.selectYear = this.selectYear.bind(this);\n  }\n\n  range(n) {\n    const temp = [];\n    for(var i = 0; i < n; i++) {\n      temp[i] = i;\n    }\n    return temp;\n  }\n\n  filterObjProps(blacklist, obj) {    \n    // Gets rid of unwanted object properties\n    if(typeof obj === \"object\") {\n      // Makes a copy of the object and modifies it\n      const temp = JSON.parse(JSON.stringify(obj));\n      blacklist.map(prop => delete temp[prop]);\n      return temp;\n    } else{\n      return obj;\n    }\n  }\n  \n  // Converts from object literal to html\n  convert(obj) {\n    if(typeof obj !== \"object\") {\n      return obj;\n    } else if(obj.constructor === Array) {\n      return obj.map(elem => <tr><td>{this.convert(elem)}</td></tr>);\n    } else {\n      return Object.keys(obj).map(key => <tr><td>{key}</td> <td>{this.convert(obj[key])}</td> </tr>);\n    }\n  }\n\n  makePlan(obj, props) {\n    // Converts a plan object into html\n    if(obj.constructor === Array) {\n      return obj.map(elem => <tr><td><button onClick={() => this.delMod(elem.name, elem.mcs, props[1], props[0])}>{elem.name}</button></td></tr>);\n    } else {\n      return Object.keys(obj).map(key => <tr><td>{key}</td> <td>{this.makePlan(obj[key], props.concat([key]))}</td> </tr>);\n    }\n  }\n\n  getCurrMods() {\n    var currmods = [];\n      for(var year in this.state.yourmods) {\n        const first = this.state.yourmods[year][\"Sem 1\"].map(mod => mod.name);\n        const second = this.state.yourmods[year][\"Sem 2\"].map(mod => mod.name);\n        currmods = currmods.concat(first.concat(second));\n      }\n    return currmods;\n  }\n\n  search(year, mod){\n    const url = `https://api.nusmods.com/${year}/modules/${mod}.json`;\n    console.log(url);\n    axios.get(url)\n    .then((response) => {\n      this.setState({\n        value: mod,\n        year: year,\n        info: response.data,\n        // error: \"\"\n      });\n    })\n    .catch((error) => {\n      // handle error\n      console.log(error);\n      this.setState({\n        info: undefined,\n        error: \"Could not find module\"\n      });\n    });\n  }\n\n  modMavenTree(obj) {\n    // Parses boolTree objs to return a html tree\n    if(typeof obj !== \"object\") {\n      return <tr><td><button onClick={() => this.search(this.state.year, obj)}>{obj}</button></td></tr>;\n    } else if(obj.constructor === Array) {\n      return obj.map(mod => this.modMavenTree(mod));\n    } else {\n      const replace = key => (key === \"or\" ? \"Either of\" : key === \"and\" ? \"All of\" : key);\n      return Object.keys(obj).map(key => <tr><td>{replace(key)}</td> <td>{this.modMavenTree(obj[key])}</td> </tr>);\n    }\n  }\n\n  // Parses boolTree objs to return a bool value(prerequisites, preclusions)\n  parseBoolTree(obj, currmods) {\n    if(typeof obj !== \"object\") {\n      return currmods.indexOf(obj) >= 0;\n    } else {\n      const or = obj.or == null ? true : obj.or.reduce((acc, elem) => acc || this.parseBoolTree(elem, currmods), false);\n      const and = obj.and == null ? true : obj.and.reduce((acc, elem) => acc && this.parseBoolTree(elem, currmods), true);\n      return or && and;\n    }\n  }\n\n  checkPreclusion(currmods) {\n    const preclusions = this.state.info.ParsedPreclusion;\n    console.log(preclusions, currmods);\n    return preclusions == null ? false : this.parseBoolTree(preclusions, currmods);\n  }\n  \n  checkPrereqs(currmods) {\n    const prereqs = this.state.info.ParsedPrerequisite;\n    return prereqs == null ? true : this.parseBoolTree(prereqs, currmods);\n  }\n\n  checkDuplicates(mod, currmods) {\n    return currmods.filter(currmod => currmod === mod).length > 0;\n  }\n\n  addMod(mod, sem, year) {\n    const currmods = this.getCurrMods();\n    const temp = JSON.parse(JSON.stringify(this.state.yourmods));\n    // Checks for terminating conditions\n    if(this.checkDuplicates(mod, currmods)) {\n      this.setState({error: \"No duplicates\"});\n      return undefined;\n    } else if(this.checkPreclusion(currmods)) {\n      this.setState({error: \"Already precluded\"});\n      return undefined;\n    } else if(!this.checkPrereqs(currmods)) {\n      this.setState({error: \"Lack prerequisites\"});\n      return undefined;\n    }\n\n    if(temp[year] === undefined) {\n      temp[year] = {\"Sem 1\": [], \"Sem 2\": []};\n    }\n    temp[year][sem] = temp[year][sem].concat([{\"name\": mod, \"mcs\": this.state.info.ModuleCredit}]);\n    \n    // Updates yourmods, mcs, and clears error\n    this.setState((state, props) => ({\n      yourmods: temp,\n      mcs: state.mcs + parseInt(state.info.ModuleCredit),\n      error: \"\"\n    })); \n  }\n\n  delMod(mod, mcs, sem, year) {\n    const temp = JSON.parse(JSON.stringify(this.state.yourmods));\n    temp[year][sem] = temp[year][sem].filter(elem => elem.name !== mod);\n    this.setState((state, props) => ({\n      yourmods: temp,\n      mcs: state.mcs - mcs\n    }));\n  }\n\n  selectSem(event) {\n    this.setState({sem: event.target.value});\n  }\n    \n  selectYear(event) {\n    this.setState({year: event.target.value});\n    axios.get(`https://api.nusmods.com/${event.target.value}/moduleList.json`)\n    .then((response) => {\n      this.setState({\n        modules: response.data\n      })\n    });\n  }\n\n  handleClick(event) {\n    if(event.target.type === \"submit\") {\n      // If submit button is clicked\n      if(this.state.info == null) {\n        this.setState({error: \"No mod selected\"});\n        return undefined;\n      }\n      const year = this.state.year;\n      const sem = \"Sem \" + this.state.sem;\n      const mod = this.state.info.ModuleCode;\n      \n      this.addMod(mod, sem, year);\n    } \n  }\n\n  handleChange(event) {\n    const value = event.target.value.toUpperCase();\n    const modcodes = this.state.modules.map(mod => mod[\"ModuleCode\"]);\n    const results = (value === \"\") ? [] : modcodes.filter(mod => RegExp(value + '+').test(mod)).slice(0,10);\n    this.setState({\n      value: value,\n      autocomplete: results\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.search(this.state.year, this.state.value);\n  }\n  \n  componentDidMount() {\n    axios.get(`https://api.nusmods.com/${this.state.year}/moduleList.json`)\n    .then((response) => {\n      this.setState({\n        modules: response.data\n      })\n    });\n  }\n\n  render() {\n    const unwantedProps = [\"LockedModules\", \"ParsedPreclusion\", \"ParsedPrerequisite\", \"ModmavenTree\", \"History\", \"Timetable\", \"LecturePeriods\", \"TutorialPeriods\", \"CorsBiddingStats\", \"Workload\"];\n    const mmTree = this.state.info !== undefined \n                      ? {\"Preclusions\": this.state.info.ParsedPreclusion,\n                        \"Prerequisites\": this.state.info.ParsedPrerequisite,\n                        \"Needed by\": this.state.info.LockedModules} : \"\";\n    return (\n      <div className=\"App\">\n        <div>\n          Your Mods: \n          {this.makePlan(this.state.yourmods, [])} <br/>\n          Your MCs: {this.state.mcs}<br/>\n        </div>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            Module Code:\n            <input type=\"text\" name=\"name\" value={this.state.value} onChange={this.handleChange}/>\n            <input type=\"submit\" value=\"Search\" />\n            <button id=\"add-mod\" onClick={this.handleClick}>Add Module</button> <br/>\n            Semester: \n            <select id=\"select-sem\" onClick={this.selectSem}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n            </select>\n            Year:\n            <select id=\"select-year\" onClick={this.selectYear}>\n              {this.range(20).map(i => (<option value={(i + 2000) +  \"-\" + (i + 2001)}>{(i + 2000) +  \"-\" + (i + 2001)}</option>))}\n            </select>\n            <br/>\n            <span style={{color: \"red\"}}>{this.state.error}</span>\n            {this.state.autocomplete.map(result => <p>{result}</p>)}\n          </form>\n          {this.convert(this.filterObjProps(unwantedProps,\n                                           this.state.info))}\n          {this.modMavenTree(mmTree)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}