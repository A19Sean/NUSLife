{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["axios","require","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","sem","year","modules","info","undefined","preReqTree","history","yourmods","mcs","autocomplete","error","handleChange","bind","assertThisInitialized","handleSubmit","handleClick","selectSem","selectYear","n","temp","i","blacklist","obj","JSON","parse","stringify","map","prop","_this2","constructor","Array","elem","react_default","a","createElement","convert","keys","key","_this3","onClick","delMod","name","makePlan","concat","currmods","first","mod","second","_this4","url","console","log","get","then","response","setState","data","slice","catch","_this5","search","modMavenTree","replace","_this7","ModuleCode","_this6","ParsedPrerequisite","getPrereqs","prTree","Promise","all","boolOp","buildTree","prArray","result","resolve","_this8","indexOf","or","reduce","acc","parseBoolTree","and","preclusions","ParsedPreclusion","prereqs","filter","currmod","length","getCurrMods","checkDuplicates","checkPreclusion","checkPrereqs","Sem 1","Sem 2","ModuleCredit","parseInt","event","target","_this9","type","addMod","toUpperCase","modcodes","results","RegExp","test","preventDefault","_this10","_this11","mmTree","Preclusions","Prerequisites","Needed by","LockedModules","className","onSubmit","onChange","id","range","style","color","filterObjProps","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0QAEMA,SAAQC,EAAQ,KAgVPC,cAlUb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAACC,MAAO,SACPC,IAAK,IACLC,KAAM,YACNC,QAAS,GACTC,UAAMC,EACNC,WAAY,GACZC,QAAS,GACTC,SAAU,GACVC,IAAK,EACLC,aAAc,GACdC,MAAO,IAGrBnB,EAAKoB,aAAepB,EAAKoB,aAAaC,KAAlBpB,OAAAqB,EAAA,EAAArB,QAAAqB,EAAA,EAAArB,CAAAD,KACpBA,EAAKuB,aAAevB,EAAKuB,aAAaF,KAAlBpB,OAAAqB,EAAA,EAAArB,QAAAqB,EAAA,EAAArB,CAAAD,KACpBA,EAAKwB,YAAcxB,EAAKwB,YAAYH,KAAjBpB,OAAAqB,EAAA,EAAArB,QAAAqB,EAAA,EAAArB,CAAAD,KACnBA,EAAKyB,UAAYzB,EAAKyB,UAAUJ,KAAfpB,OAAAqB,EAAA,EAAArB,QAAAqB,EAAA,EAAArB,CAAAD,KACjBA,EAAK0B,WAAa1B,EAAK0B,WAAWL,KAAhBpB,OAAAqB,EAAA,EAAArB,QAAAqB,EAAA,EAAArB,CAAAD,KAClBA,EAAKc,WAAad,EAAKc,WAAWO,KAAhBpB,OAAAqB,EAAA,EAAArB,QAAAqB,EAAA,EAAArB,CAAAD,KApBDA,qEAuBb2B,GAEJ,IADA,IAAMC,EAAO,GACLC,EAAI,EAAGA,EAAIF,EAAGE,IACpBD,EAAKC,GAAKA,EAEZ,OAAOD,yCAIME,EAAWC,GACxB,GAAkB,kBAARA,EAAkB,CAE1B,IAAMH,EAAOI,KAAKC,MAAMD,KAAKE,UAAUH,IAEvC,OADAD,EAAUK,IAAI,SAAAC,GAAI,cAAWR,EAAKQ,KAC3BR,EAEP,OAAOG,kCAKHA,GAAK,IAAAM,EAAAlC,KACX,MAAkB,kBAAR4B,EACDA,EACCA,EAAIO,cAAgBC,MACrBR,EAAII,IAAI,SAAAK,GAAI,OAAIC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAKN,EAAKO,QAAQJ,OAEtCvC,OAAO4C,KAAKd,GAAKI,IAAI,SAAAW,GAAG,OAAIL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAKG,GAAT,IAAmBL,EAAAC,EAAAC,cAAA,UAAKN,EAAKO,QAAQb,EAAIe,KAAzC,wCAK9Bf,EAAKhC,GAAO,IAAAgD,EAAA5C,KACnB,OAAG4B,EAAIO,cAAgBC,MACdR,EAAII,IAAI,SAAAK,GAAI,OAAIC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMD,EAAKE,OAAOT,EAAKU,KAAMV,EAAKvB,IAAKlB,EAAM,GAAIA,EAAM,MAAMyC,EAAKU,UAE3GjD,OAAO4C,KAAKd,GAAKI,IAAI,SAAAW,GAAG,OAAIL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAKG,GAAT,IAAmBL,EAAAC,EAAAC,cAAA,UAAKI,EAAKI,SAASpB,EAAIe,GAAM/C,EAAMqD,OAAO,CAACN,MAA9D,6CAKrC,IAAIO,EAAW,GACb,IAAI,IAAI3C,KAAQP,KAAKI,MAAMS,SAAU,CACnC,IAAMsC,EAAQnD,KAAKI,MAAMS,SAASN,GAAM,SAASyB,IAAI,SAAAoB,GAAG,OAAIA,EAAIL,OAC1DM,EAASrD,KAAKI,MAAMS,SAASN,GAAM,SAASyB,IAAI,SAAAoB,GAAG,OAAIA,EAAIL,OACjEG,EAAWA,EAASD,OAAOE,EAAMF,OAAOI,IAE5C,OAAOH,iCAGF3C,EAAM6C,GAAI,IAAAE,EAAAtD,KACTuD,EAAG,2BAAAN,OAA8B1C,EAA9B,aAAA0C,OAA8CG,EAA9C,SACTI,QAAQC,IAAIF,GACZ9D,EAAMiE,IAAIH,GACTI,KAAK,SAACC,GACLN,EAAKO,SAAS,SAACzD,EAAOR,GAAR,MAAmB,CAC/BS,MAAO+C,EACP7C,KAAMA,EACNE,KAAMmD,EAASE,KACf/C,aAAc,GACdH,QAASR,EAAMQ,QAAQqC,OAAO,CAACG,IAAMW,OAAO,SAG/CC,MAAM,SAAChD,GAENwC,QAAQC,IAAIzC,GACZsC,EAAKO,SAAS,CACZpD,UAAMC,EACNM,MAAO,iEAMAY,GAAK,IAAAqC,EAAAjE,KAChB,GAAkB,kBAAR4B,EACR,OAAOU,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMoB,EAAKC,OAAOD,EAAK7D,MAAMG,KAAMqB,KAAOA,KACrE,GAAGA,EAAIO,cAAgBC,MAC5B,OAAOR,EAAII,IAAI,SAAAoB,GAAG,OAAIa,EAAKE,aAAaf,KAGxC,OAAOtD,OAAO4C,KAAKd,GAAKI,IAAI,SAAAW,GAAG,OAAIL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UADvB,SAAAG,GAAG,MAAa,OAARA,EAAe,YAAsB,QAARA,EAAgB,SAAWA,EACpCyB,CAAQzB,IAAjB,IAA4BL,EAAAC,EAAAC,cAAA,UAAKyB,EAAKE,aAAavC,EAAIe,KAAvD,4CAK1B,IAAA0B,EAAArE,KACLoD,EAAMpD,KAAKI,MAAMK,KAAK6D,WACtB/D,EAAOP,KAAKI,MAAMG,MAgBxB,SAAmB6C,GAAK,IAAAmB,EAAAvE,KACtB,OAfF,SAAoBoD,GAClB,QAAW1C,IAAR0C,EAAH,CAIA,IAAMG,EAAG,2BAAAN,OAA8B1C,EAA9B,aAAA0C,OAA8CG,EAA9C,SAET,OAAO3D,EAAMiE,IAAIH,GAChBI,KAAK,SAAAC,GAAQ,OAAIA,EAASY,qBAC1BR,MAAM,SAAChD,OAMDyD,CAAWrB,GACjBO,KAAK,SAAAe,GAEJ,OADAlB,QAAQC,IAAIiB,QACEhE,IAAXgE,EAEMC,QAAQC,IAAI9E,OAAO4C,KAAKgC,GAAQ1C,IAAI,SAAA6C,GACzCF,QAAQC,IAAIF,EAAOG,GAAQ7C,IAAIuC,EAAKO,YACnCnB,KAAK,SAAAoB,GACJL,EAAOG,GAAUE,OAGpBpB,KAAK,SAAAqB,GACJN,EAAM,IAAUtB,EAChBI,QAAQC,IAAIiB,KAEbO,QAAQP,GAEFtB,KAKb0B,CAAU1B,GACTO,KAAK,SAAAqB,GACJX,EAAKR,SAAS,CACZlD,WAAYqE,4CAMJpD,EAAKsB,GAAU,IAAAgC,EAAAlF,KAC3B,GAAkB,kBAAR4B,EACR,OAAOsB,EAASiC,QAAQvD,IAAQ,EAEhC,IAAMwD,EAAe,MAAVxD,EAAIwD,IAAoBxD,EAAIwD,GAAGC,OAAO,SAACC,EAAKjD,GAAN,OAAeiD,GAAOJ,EAAKK,cAAclD,EAAMa,KAAW,GACrGsC,EAAiB,MAAX5D,EAAI4D,KAAqB5D,EAAI4D,IAAIH,OAAO,SAACC,EAAKjD,GAAN,OAAeiD,GAAOJ,EAAKK,cAAclD,EAAMa,KAAW,GAC9G,OAAOkC,GAAMI,0CAIDtC,GACd,IAAMuC,EAAczF,KAAKI,MAAMK,KAAKiF,iBACpC,OAAsB,MAAfD,GAA8BzF,KAAKuF,cAAcE,EAAavC,wCAG1DA,GACX,IAAMyC,EAAU3F,KAAKI,MAAMK,KAAK+D,mBAChC,OAAkB,MAAXmB,GAAyB3F,KAAKuF,cAAcI,EAASzC,2CAG9CE,EAAKF,GACnB,OAAOA,EAAS0C,OAAO,SAAAC,GAAO,OAAIA,IAAYzC,IAAK0C,OAAS,iCAGvD1C,EAAK9C,EAAKC,GACf,IAAM2C,EAAWlD,KAAK+F,cAChBtE,EAAOI,KAAKC,MAAMD,KAAKE,UAAU/B,KAAKI,MAAMS,WAE/Cb,KAAKgG,gBAAgB5C,EAAKF,GAC3BlD,KAAK6D,SAAS,CAAC7C,MAAO,kBAEdhB,KAAKiG,gBAAgB/C,GAC7BlD,KAAK6D,SAAS,CAAC7C,MAAO,sBAEbhB,KAAKkG,aAAahD,SAKXxC,IAAfe,EAAKlB,KACNkB,EAAKlB,GAAQ,CAAC4F,QAAS,GAAIC,QAAS,KAEtC3E,EAAKlB,GAAMD,GAAOmB,EAAKlB,GAAMD,GAAK2C,OAAO,CAAC,CAACF,KAAQK,EAAKtC,IAAOd,KAAKI,MAAMK,KAAK4F,gBAG/ErG,KAAK6D,SAAS,SAACzD,EAAOR,GAAR,MAAmB,CAC/BiB,SAAUY,EACVX,IAAKV,EAAMU,IAAMwF,SAASlG,EAAMK,KAAK4F,cACrCrF,MAAO,OAbPhB,KAAK6D,SAAS,CAAC7C,MAAO,sDAiBnBoC,EAAKtC,EAAKR,EAAKC,GACpB,IAAMkB,EAAOI,KAAKC,MAAMD,KAAKE,UAAU/B,KAAKI,MAAMS,WAClDY,EAAKlB,GAAMD,GAAOmB,EAAKlB,GAAMD,GAAKsF,OAAO,SAAAvD,GAAI,OAAIA,EAAKU,OAASK,IAC/DpD,KAAK6D,SAAS,SAACzD,EAAOR,GAAR,MAAmB,CAC/BiB,SAAUY,EACVX,IAAKV,EAAMU,IAAMA,uCAIXyF,GACRvG,KAAK6D,SAAS,CAACvD,IAAKiG,EAAMC,OAAOnG,2CAGxBkG,GAAO,IAAAE,EAAAzG,KAChBA,KAAK6D,SAAS,CAACtD,KAAMgG,EAAMC,OAAOnG,QAClCZ,EAAMiE,IAAN,2BAAAT,OAAqCsD,EAAMC,OAAOnG,MAAlD,qBACCsD,KAAK,SAACC,GACL6C,EAAK5C,SAAS,CACZrD,QAASoD,EAASE,6CAKZyC,GACV,GAAyB,WAAtBA,EAAMC,OAAOE,KAAmB,CAEjC,GAAsB,MAAnB1G,KAAKI,MAAMK,KAEZ,YADAT,KAAK6D,SAAS,CAAC7C,MAAO,oBAGxB,IAAMT,EAAOP,KAAKI,MAAMG,KAClBD,EAAM,OAASN,KAAKI,MAAME,IAC1B8C,EAAMpD,KAAKI,MAAMK,KAAK6D,WAE5BtE,KAAK2G,OAAOvD,EAAK9C,EAAKC,yCAIbgG,GACX,IAAMlG,EAAQkG,EAAMC,OAAOnG,MAAMuG,cAC3BC,EAAW7G,KAAKI,MAAMI,QAAQwB,IAAI,SAAAoB,GAAG,OAAIA,EAAG,aAC5C0D,EAAqB,KAAVzG,EAAgB,GAAKwG,EAASjB,OAAO,SAAAxC,GAAG,OAAI2D,OAAO1G,EAAQ,KAAK2G,KAAK5D,KAAMW,MAAM,EAAE,IACpG/D,KAAK6D,SAAS,CACZxD,MAAOA,EACPU,aAAc+F,yCAILP,GACXA,EAAMU,iBACNjH,KAAKkE,OAAOlE,KAAKI,MAAMG,KAAMP,KAAKI,MAAMC,mDAGtB,IAAA6G,EAAAlH,KAClBP,EAAMiE,IAAN,2BAAAT,OAAqCjD,KAAKI,MAAMG,KAAhD,qBACCoD,KAAK,SAACC,GACLsD,EAAKrD,SAAS,CACZrD,QAASoD,EAASE,0CAKf,IAAAqD,EAAAnH,KAEDoH,OAA6B1G,IAApBV,KAAKI,MAAMK,KACN,CAAC4G,YAAerH,KAAKI,MAAMK,KAAKiF,iBAChC4B,cAAiBtH,KAAKI,MAAMK,KAAK+D,mBACjC+C,YAAavH,KAAKI,MAAMK,KAAK+G,eAAiB,GAClE,OACElF,EAAAC,EAAAC,cAAA,OAAKiF,UAAU,OACbnF,EAAAC,EAAAC,cAAA,wBAEGxC,KAAKgD,SAAShD,KAAKI,MAAMS,SAAU,IAFtC,IAE2CyB,EAAAC,EAAAC,cAAA,WAF3C,aAGaxC,KAAKI,MAAMU,IAAIwB,EAAAC,EAAAC,cAAA,YAE5BF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMkF,SAAU1H,KAAKoB,cAArB,eAEEkB,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,OAAO3D,KAAK,OAAO1C,MAAOL,KAAKI,MAAMC,MAAOsH,SAAU3H,KAAKiB,eACvEqB,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,SAASrG,MAAM,WAC3BiC,EAAAC,EAAAC,cAAA,UAAQoF,GAAG,UAAU/E,QAAS7C,KAAKqB,aAAnC,cAJF,IAIsEiB,EAAAC,EAAAC,cAAA,gBAChD9B,IAApBV,KAAKI,MAAMK,KACP6B,EAAAC,EAAAC,cAAA,UAAQoF,GAAG,aAAa/E,QAAS7C,KAAKW,YAAtC,cACA,GAPN,IAOU2B,EAAAC,EAAAC,cAAA,WAPV,YASEF,EAAAC,EAAAC,cAAA,UAAQoF,GAAG,aAAa/E,QAAS7C,KAAKsB,WACpCgB,EAAAC,EAAAC,cAAA,UAAQnC,MAAM,KAAd,KACAiC,EAAAC,EAAAC,cAAA,UAAQnC,MAAM,KAAd,MAXJ,QAcEiC,EAAAC,EAAAC,cAAA,UAAQoF,GAAG,cAAc/E,QAAS7C,KAAKuB,YACpCvB,KAAK6H,MAAM,IAAI7F,IAAI,SAAAN,GAAC,OAAKY,EAAAC,EAAAC,cAAA,UAAQnC,MAAQqB,EAAI,IAAS,KAAOA,EAAI,OAASA,EAAI,IAAS,KAAOA,EAAI,UAErGY,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMsF,MAAO,CAACC,MAAO,QAAS/H,KAAKI,MAAMY,OACxChB,KAAKI,MAAMW,aAAaiB,IAAI,SAAAgD,GAAM,OAAI1C,EAAAC,EAAAC,cAAA,KAAGK,QAAS,kBAAMsE,EAAKjD,OAAOiD,EAAK/G,MAAMG,KAAMyE,KAAUA,MAEjGhF,KAAKyC,QAAQzC,KAAKgI,eAlCH,CAAC,gBAAiB,mBAAoB,qBAAsB,eAAgB,UAAW,YAAa,iBAAkB,kBAAmB,mBAAoB,YAmC5IhI,KAAKI,MAAMK,OAC3CT,KAAKmE,aAAaiD,GAClBpH,KAAKmE,aAAanE,KAAKI,MAAMO,aAEhC2B,EAAAC,EAAAC,cAAA,sBAEGxC,KAAKI,MAAMQ,QAAQoB,IAAI,SAAAgD,GAAM,OAAI1C,EAAAC,EAAAC,cAAA,KAAGK,QAAS,kBAAMsE,EAAKjD,OAAOiD,EAAK/G,MAAMG,KAAMyE,KAAUA,cA5TnFiD,aCHEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlG,EAAAC,EAAAC,cAACiG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnF,KAAK,SAAAoF,GACjCA,EAAaC","file":"static/js/main.9f0b43b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nconst axios = require('axios');\n\n// TODO\n// Check for prereqs, preclusion, mcs(overloading), basic requirements, mod mapping\n// Other programmes besides mods eg SEP, UTCP\n// Sort schedule chronologically\n// Some bugs in the ParsedPrerequisite Tree: Should be or but instead it's and eg: MA1521, MA1102R\n// Overload indicator\n// Keyboard shortcuts\n// Test for dead links\n// Build entire prereq tree from top down\n// Tags and sharing\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: 'Search', // state of search bar\n                  sem: '1',\n                  year: '2018-2019',\n                  modules: [], // stores all modules\n                  info: undefined, // state of search result\n                  preReqTree: {}, // contains preReqTree obj\n                  history: [], // contains history of searched modules\n                  yourmods: {}, // contains scheduled modules\n                  mcs: 0,\n                  autocomplete: [], // state of autocomplete suggestions\n                  error: \"\" // displays all errors\n                };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.selectSem = this.selectSem.bind(this);\n    this.selectYear = this.selectYear.bind(this);\n    this.preReqTree = this.preReqTree.bind(this);\n  }\n\n  range(n) {\n    const temp = [];\n    for(var i = 0; i < n; i++) {\n      temp[i] = i;\n    }\n    return temp;\n  }\n\n  // Gets rid of unwanted object properties\n  filterObjProps(blacklist, obj) {    \n    if(typeof obj === \"object\") {\n      // Makes a copy of the object and modifies it\n      const temp = JSON.parse(JSON.stringify(obj));\n      blacklist.map(prop => delete temp[prop]);\n      return temp;\n    } else{\n      return obj;\n    }\n  }\n  \n  // Converts from object literal to html\n  convert(obj) {\n    if(typeof obj !== \"object\") {\n      return obj;\n    } else if(obj.constructor === Array) {\n      return obj.map(elem => <tr><td>{this.convert(elem)}</td></tr>);\n    } else {\n      return Object.keys(obj).map(key => <tr><td>{key}</td> <td>{this.convert(obj[key])}</td> </tr>);\n    }\n  }\n\n  // Converts a plan object into html\n  makePlan(obj, props) {\n    if(obj.constructor === Array) {\n      return obj.map(elem => <tr><td><button onClick={() => this.delMod(elem.name, elem.mcs, props[1], props[0])}>{elem.name}</button></td></tr>);\n    } else {\n      return Object.keys(obj).map(key => <tr><td>{key}</td> <td>{this.makePlan(obj[key], props.concat([key]))}</td> </tr>);\n    }\n  }\n\n  getCurrMods() {\n    var currmods = [];\n      for(var year in this.state.yourmods) {\n        const first = this.state.yourmods[year][\"Sem 1\"].map(mod => mod.name);\n        const second = this.state.yourmods[year][\"Sem 2\"].map(mod => mod.name);\n        currmods = currmods.concat(first.concat(second));\n      }\n    return currmods;\n  }\n\n  search(year, mod){\n    const url = `https://api.nusmods.com/${year}/modules/${mod}.json`;\n    console.log(url);\n    axios.get(url)\n    .then((response) => {\n      this.setState((state, props) => ({\n        value: mod,\n        year: year,\n        info: response.data,\n        autocomplete: [],\n        history: state.history.concat([mod]).slice(-10)\n      }));\n    })\n    .catch((error) => {\n      // handle error\n      console.log(error);\n      this.setState({\n        info: undefined,\n        error: \"Could not find module\"\n      });\n    });\n  }\n\n  // Parses boolTree objs to return a html tree\n  modMavenTree(obj) {\n    if(typeof obj !== \"object\") {\n      return <tr><td><button onClick={() => this.search(this.state.year, obj)}>{obj}</button></td></tr>;\n    } else if(obj.constructor === Array) {\n      return obj.map(mod => this.modMavenTree(mod));\n    } else {\n      const replace = key => (key === \"or\" ? \"Either of\" : key === \"and\" ? \"All of\" : key);\n      return Object.keys(obj).map(key => <tr><td>{replace(key)}</td> <td>{this.modMavenTree(obj[key])}</td> </tr>);\n    }\n  }\n\n  // Builds entire prereq tree and updates state\n  preReqTree() {\n    const mod = this.state.info.ModuleCode;\n    const year = this.state.year;\n\n    function getPrereqs(mod) {\n      if(mod === undefined) {\n        return undefined;\n      }\n      \n      const url = `https://api.nusmods.com/${year}/modules/${mod}.json`;\n      \n      return axios.get(url)\n      .then(response => response.ParsedPrerequisite)\n      .catch((error) => {\n        return undefined;\n      });\n    }\n    \n    function buildTree(mod) {\n      return getPrereqs(mod)\n      .then(prTree => {\n        console.log(prTree);\n        if(prTree !== undefined) {\n          // iterates on bool operator keys \"or\" and \"and\"\n          return Promise.all(Object.keys(prTree).map(boolOp => {\n            Promise.all(prTree[boolOp].map(this.buildTree))\n            .then(prArray => {\n              prTree[boolOp] = prArray;\n            });\n          }))\n          .then(result => {\n            prTree[\"mod\"] = mod;\n            console.log(prTree);\n          })\n          .resolve(prTree);\n        } else{\n          return mod;\n        }\n      });\n    }\n\n    buildTree(mod)\n    .then(result => {\n      this.setState({\n        preReqTree: result\n      });\n    });\n  }\n\n  // Parses boolTree objs to return a bool value(prerequisites, preclusions)\n  parseBoolTree(obj, currmods) {\n    if(typeof obj !== \"object\") {\n      return currmods.indexOf(obj) >= 0;\n    } else {\n      const or = obj.or == null ? true : obj.or.reduce((acc, elem) => acc || this.parseBoolTree(elem, currmods), false);\n      const and = obj.and == null ? true : obj.and.reduce((acc, elem) => acc && this.parseBoolTree(elem, currmods), true);\n      return or && and;\n    }\n  }\n\n  checkPreclusion(currmods) {\n    const preclusions = this.state.info.ParsedPreclusion;\n    return preclusions == null ? false : this.parseBoolTree(preclusions, currmods);\n  }\n  \n  checkPrereqs(currmods) {\n    const prereqs = this.state.info.ParsedPrerequisite;\n    return prereqs == null ? true : this.parseBoolTree(prereqs, currmods);\n  }\n\n  checkDuplicates(mod, currmods) {\n    return currmods.filter(currmod => currmod === mod).length > 0;\n  }\n\n  addMod(mod, sem, year) {\n    const currmods = this.getCurrMods();\n    const temp = JSON.parse(JSON.stringify(this.state.yourmods));\n    // Checks for terminating conditions\n    if(this.checkDuplicates(mod, currmods)) {\n      this.setState({error: \"No duplicates\"});\n      return undefined;\n    } else if(this.checkPreclusion(currmods)) {\n      this.setState({error: \"Already precluded\"});\n      return undefined;\n    } else if(!this.checkPrereqs(currmods)) {\n      this.setState({error: \"Lack prerequisites\"});\n      return undefined;\n    }\n\n    if(temp[year] === undefined) {\n      temp[year] = {\"Sem 1\": [], \"Sem 2\": []};\n    }\n    temp[year][sem] = temp[year][sem].concat([{\"name\": mod, \"mcs\": this.state.info.ModuleCredit}]);\n    \n    // Updates yourmods, mcs, and clears error\n    this.setState((state, props) => ({\n      yourmods: temp,\n      mcs: state.mcs + parseInt(state.info.ModuleCredit),\n      error: \"\"\n    })); \n  }\n\n  delMod(mod, mcs, sem, year) {\n    const temp = JSON.parse(JSON.stringify(this.state.yourmods));\n    temp[year][sem] = temp[year][sem].filter(elem => elem.name !== mod);\n    this.setState((state, props) => ({\n      yourmods: temp,\n      mcs: state.mcs - mcs\n    }));\n  }\n\n  selectSem(event) {\n    this.setState({sem: event.target.value});\n  }\n    \n  selectYear(event) {\n    this.setState({year: event.target.value});\n    axios.get(`https://api.nusmods.com/${event.target.value}/moduleList.json`)\n    .then((response) => {\n      this.setState({\n        modules: response.data\n      })\n    });\n  }\n\n  handleClick(event) {\n    if(event.target.type === \"submit\") {\n      // If submit button is clicked\n      if(this.state.info == null) {\n        this.setState({error: \"No mod selected\"});\n        return undefined;\n      }\n      const year = this.state.year;\n      const sem = \"Sem \" + this.state.sem;\n      const mod = this.state.info.ModuleCode;\n      \n      this.addMod(mod, sem, year);\n    } \n  }\n\n  handleChange(event) {\n    const value = event.target.value.toUpperCase();\n    const modcodes = this.state.modules.map(mod => mod[\"ModuleCode\"]);\n    const results = (value === \"\") ? [] : modcodes.filter(mod => RegExp(value + '+').test(mod)).slice(0,10);\n    this.setState({\n      value: value,\n      autocomplete: results\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.search(this.state.year, this.state.value);\n  }\n  \n  componentDidMount() {\n    axios.get(`https://api.nusmods.com/${this.state.year}/moduleList.json`)\n    .then((response) => {\n      this.setState({\n        modules: response.data\n      })\n    });\n  }\n\n  render() {\n    const unwantedProps = [\"LockedModules\", \"ParsedPreclusion\", \"ParsedPrerequisite\", \"ModmavenTree\", \"History\", \"Timetable\", \"LecturePeriods\", \"TutorialPeriods\", \"CorsBiddingStats\", \"Workload\"];\n    const mmTree = this.state.info !== undefined \n                      ? {\"Preclusions\": this.state.info.ParsedPreclusion,\n                        \"Prerequisites\": this.state.info.ParsedPrerequisite,\n                        \"Needed by\": this.state.info.LockedModules} : \"\";\n    return (\n      <div className=\"App\">\n        <div>\n          Your Mods: \n          {this.makePlan(this.state.yourmods, [])} <br/>\n          Your MCs: {this.state.mcs}<br/>\n        </div>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            Module Code:\n            <input type=\"text\" name=\"name\" value={this.state.value} onChange={this.handleChange}/>\n            <input type=\"submit\" value=\"Search\" />\n            <button id=\"add-mod\" onClick={this.handleClick}>Add Module</button> <br/>\n           {this.state.info !== undefined \n              ? <button id=\"build-tree\" onClick={this.preReqTree}>Build Tree</button>\n              : \"\"} <br/>\n            Semester: \n            <select id=\"select-sem\" onClick={this.selectSem}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n            </select>\n            Year:\n            <select id=\"select-year\" onClick={this.selectYear}>\n              {this.range(20).map(i => (<option value={(i + 2000) +  \"-\" + (i + 2001)}>{(i + 2000) +  \"-\" + (i + 2001)}</option>))}\n            </select>\n            <br/>\n            <span style={{color: \"red\"}}>{this.state.error}</span>\n            {this.state.autocomplete.map(result => <p onClick={() => this.search(this.state.year, result)}>{result}</p>)}\n          </form>\n          {this.convert(this.filterObjProps(unwantedProps,\n                                           this.state.info))}\n          {this.modMavenTree(mmTree)}\n          {this.modMavenTree(this.state.preReqTree)}\n        </div>\n        <div>\n          History:\n          {this.state.history.map(result => <p onClick={() => this.search(this.state.year, result)}>{result}</p>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}