{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["axios","require","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","sem","year","modules","info","yourmods","mcs","autocomplete","error","handleChange","bind","assertThisInitialized","handleSubmit","handleClick","event","target","type","preclusions","Preclusion","match","temp","mod","ModuleCode","currmods","concat","filter","currmod","length","setState","indexOf","undefined","Sem 1","Sem 2","parseInt","ModuleCredit","tagName","parent","parentNode","id","modcodes","map","results","RegExp","test","slice","_this2","url","get","then","response","data","console","log","catch","preventDefault","_this3","obj","_this4","blacklist","constructor","Array","elem","react_default","a","createElement","convert","keys","key","n","i","className","onSubmit","onChange","name","onClick","style","color","range","result","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3d55c96.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nconst axios = require('axios');\n\n// Check for prereqs, preclusion, mcs, basic requirements\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: '',\n                  sem: '1',\n                  year: '2018-2019',\n                  modules: [],\n                  info: {},\n                  yourmods: {},\n                  mcs: 0,\n                  autocomplete: [],\n                  error: \"\"\n                };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    if(event.target.type === \"submit\") {\n      const preclusions = this.state.info.Preclusion.match(/[A-Z]{2,}[0-9]{4}[A-Z]*/g);\n      const temp = this.state.yourmods;\n      const mod = this.state.info.ModuleCode;\n      const year = this.state.year;\n      const sem = \"Sem \" + this.state.sem;\n      var currmods = [];\n      for(var year in this.state.yourmods) {\n        currmods = currmods.concat(this.state.yourmods[year][\"Sem 1\"] + this.state.yourmods[year][\"Sem 2\"]);\n      }\n      // Checks for terminating conditions\n      if(currmods.filter(currmod => currmod === mod).length > 0) {\n        this.setState({error: \"No Duplicates\"});\n        return undefined;\n      } else if(currmods.filter(currmod => preclusions.indexOf(currmod) >= 0).length > 0) {\n        this.setState({error: \"Already precluded\"});\n        return undefined;\n      }\n      \n      if(temp[year] === undefined) {\n        temp[year] = {\"Sem 1\": [], \"Sem 2\": []};\n      }\n      temp[year][sem] = temp[year][sem].concat([mod]);\n      \n      this.setState((state, props) => ({\n        yourmods: temp,\n        mcs: state.mcs + parseInt(state.info.ModuleCredit),\n        error: \"\"\n      })); \n    } else if(event.target.tagName === \"OPTION\") {\n      const parent = event.target.parentNode.id\n      if(parent === \"select-sem\") {\n        this.setState({sem: event.target.value});\n      } else if(parent === \"select-year\") {\n        this.setState({year: event.target.value});\n      }\n    }\n  }\n\n  handleChange(event) {\n    const value = event.target.value;\n    const modcodes = this.state.modules.map(mod => mod[\"ModuleCode\"]);\n    const results = (value === \"\") ? [] : modcodes.filter(mod => RegExp(value + '+').test(mod)).slice(0,10);\n    this.setState({value: value,\n                  autocomplete: results\n                  });\n  }\n\n  handleSubmit(event) {\n    const url = `https://api.nusmods.com/${this.state.year}/${this.state.sem}/modules/${this.state.value}.json`;\n    axios.get(url)\n    .then((response) => {\n      this.setState({\n        info: response.data\n      });\n      console.log(url);\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n    event.preventDefault();\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.nusmods.com/2018-2019/moduleList.json\")\n    .then((response) => {\n      this.setState({\n        modules: response.data\n      })\n    })\n  }\n  \n  convert(obj) {\n    const blacklist = [\"Timetable\", \"LecturePeriods\", \"TutorialPeriods\", \"CorsBiddingStats\", \"Workload\"];\n    if(typeof obj !== \"object\") {\n      return obj;\n    } else if(obj.constructor === Array) {\n      return obj.map(elem => <tr><td>{this.convert(elem)}</td></tr>);\n    } else {\n      const props = Object.keys(obj).filter(key => blacklist.indexOf(key) === -1);\n      return props.map(key => <tr><td>{key}</td> <td>{this.convert(obj[key])}</td> </tr>);\n    }\n  }\n\n  range(n) {\n    const temp = [];\n    for(var i = 0; i < n; i++) {\n      temp[i] = i;\n    }\n    return temp;\n  }\n\n  render() {\n    // Converts from object literal to html syntax\n    \n    return (\n      <div className=\"App\">\n        <div>\n          Your Mods: \n          {this.convert(this.state.yourmods)} <br/>\n          Your MCs: {this.state.mcs}<br/>\n        </div>\n        <div>\n          <form onSubmit={this.handleSubmit} onChange={this.handleChange}>\n            Module Code:\n            <input type=\"text\" name=\"name\" />\n            <input type=\"submit\" value=\"Search\" />\n            <button id=\"add-mod\" onClick={this.handleClick}>Add Module</button> <br/>\n            <span style={{color: \"red\"}}>{this.state.error}</span><br/>\n            Semester: \n            <select id=\"select-sem\" onClick={this.handleClick}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n            </select>\n            Year:\n            <select id=\"select-year\" onClick={this.handleClick}>\n              {this.range(19).map(i => (<option value={(i + 2000) +  \"-\" + (i + 2001)}>{(i + 2000) +  \"-\" + (i + 2001)}</option>))}\n            </select>\n            {this.state.autocomplete.map(result => <p>{result}</p>)}\n          </form>\n          {this.convert(this.state.info)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}