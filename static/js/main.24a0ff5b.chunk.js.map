{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["axios","require","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","sem","year","modules","info","undefined","yourmods","mcs","autocomplete","error","handleChange","bind","assertThisInitialized","handleSubmit","handleClick","blacklist","obj","temp","JSON","parse","stringify","map","prop","_this2","constructor","Array","elem","react_default","a","createElement","convert","keys","key","n","i","currmods","first","mod","name","second","concat","filter","currmod","length","_this3","indexOf","or","reduce","acc","and","preclusions","ParsedPreclusion","prereqs","ParsedPrerequisite","Sem 1","Sem 2","ModuleCredit","setState","parseInt","event","_this4","target","type","ModuleCode","getCurrMods","checkDuplicates","checkPreclusion","checkPrereqs","addMod","tagName","parent","parentNode","id","get","then","response","data","toUpperCase","modcodes","results","RegExp","test","slice","_this5","url","console","log","catch","preventDefault","_this6","_this7","onClick","delMod","makePlan","className","onSubmit","onChange","range","style","color","result","filterObjProps","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24a0ff5b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nconst axios = require('axios');\n\n// Check for prereqs, preclusion, mcs, basic requirements\n// Delete mods, sort chronologically\n// Build prereq tree\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: '',\n                  sem: '1',\n                  year: '2018-2019',\n                  modules: [],\n                  info: undefined,\n                  yourmods: {},\n                  mcs: 0,\n                  autocomplete: [],\n                  error: \"\"\n                };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  filterObjProps(blacklist, obj) {    \n    // Gets rid of unwanted object properties\n    if(typeof obj === \"object\") {\n      // Makes a copy of the object and modifies it\n      const temp = JSON.parse(JSON.stringify(obj));\n      blacklist.map(prop => delete temp[prop]);\n      return temp;\n    } else{\n      return obj;\n    }\n  }\n  \n  // Converts from object literal to html syntax\n  convert(obj) {\n    if(typeof obj !== \"object\") {\n      return obj;\n    } else if(obj.constructor === Array) {\n      return obj.map(elem => <tr><td>{this.convert(elem)}</td></tr>);\n    } else {\n      return Object.keys(obj).map(key => <tr><td>{key}</td> <td>{this.convert(obj[key])}</td> </tr>);\n    }\n  }\n\n  range(n) {\n    const temp = [];\n    for(var i = 0; i < n; i++) {\n      temp[i] = i;\n    }\n    return temp;\n  }\n\n  getCurrMods() {\n    var currmods = [];\n      for(var year in this.state.yourmods) {\n        const first = this.state.yourmods[year][\"Sem 1\"].map(mod => mod.name);\n        const second = this.state.yourmods[year][\"Sem 2\"].map(mod => mod.name);\n        currmods = currmods.concat(first.concat(second));\n      }\n    return currmods;\n  }\n\n  checkDuplicates(mod, currmods) {\n    return currmods.filter(currmod => currmod === mod).length > 0;\n  }\n  \n  // Parses objs to return a bool value(prerequisites, preclusions)\n  parse(obj, currmods) {\n    if(typeof obj !== \"object\") {\n      return currmods.indexOf(obj) >= 0;\n    } else {\n      const or = obj.or == null ? true : obj.or.reduce((acc, elem) => acc || this.parse(elem, currmods), false);\n      const and = obj.and == null ? true : obj.and.reduce((acc, elem) => acc && this.parse(elem, currmods), true);\n      return or && and;\n    }\n  }\n\n  checkPreclusion(currmods) {\n    const preclusions = this.state.info.ParsedPreclusion;\n    return preclusions == null ? false : this.parse(preclusions, currmods);\n  }\n  \n  checkPrereqs(currmods) {\n    const prereqs = this.state.info.ParsedPrerequisite;\n    return prereqs == null ? true : this.parse(prereqs, currmods);\n  }\n\n  addMod(mod, sem, year) {\n    const temp = JSON.parse(JSON.stringify(this.state.yourmods));\n\n    if(temp[year] === undefined) {\n      temp[year] = {\"Sem 1\": [], \"Sem 2\": []};\n    }\n    temp[year][sem] = temp[year][sem].concat([{\"name\": mod, \"mcs\": this.state.info.ModuleCredit}]);\n    \n    // Updates yourmods, mcs, and clears error\n    this.setState((state, props) => ({\n      yourmods: temp,\n      mcs: state.mcs + parseInt(state.info.ModuleCredit),\n      error: \"\"\n    })); \n  }\n\n  handleClick(event) {\n    if(event.target.type === \"submit\") {\n      // If submit button is clicked\n      if(this.state.info == null) {\n        this.setState({error: \"No mod selected\"});\n        return undefined;\n      }\n      const year = this.state.year;\n      const sem = \"Sem \" + this.state.sem;\n      const mod = this.state.info.ModuleCode;\n      const currmods = this.getCurrMods();\n\n      // Checks for terminating conditions\n      if(this.checkDuplicates(mod, currmods)) {\n        this.setState({error: \"No duplicates\"});\n        return undefined;\n      } else if(this.checkPreclusion(currmods)) {\n        this.setState({error: \"Already precluded\"});\n        return undefined;\n      } else if(!this.checkPrereqs(currmods)) {\n        this.setState({error: \"Lack prerequisites\"});\n        return undefined;\n      }\n      \n      // Adds mod to yourmods\n      this.addMod(mod, sem, year);\n    } else if(event.target.tagName === \"OPTION\") {\n      // If option is clicked, identify the element id\n      const parent = event.target.parentNode.id\n      if(parent === \"select-sem\") {\n        this.setState({sem: event.target.value});\n      } else if(parent === \"select-year\") {\n        this.setState({year: event.target.value});\n        axios.get(`https://api.nusmods.com/${event.target.value}/moduleList.json`)\n        .then((response) => {\n          this.setState({\n            modules: response.data\n          })\n        });\n      }\n    }\n  }\n\n  handleChange(event) {\n    const value = event.target.value.toUpperCase();\n    const modcodes = this.state.modules.map(mod => mod[\"ModuleCode\"]);\n    const results = (value === \"\") ? [] : modcodes.filter(mod => RegExp(value + '+').test(mod)).slice(0,10);\n    if(event.target.name === \"name\") {\n      this.setState({\n        value: value,\n        autocomplete: results\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    const url = `https://api.nusmods.com/${this.state.year}/modules/${this.state.value}.json`;\n    console.log(url);\n    axios.get(url)\n    .then((response) => {\n      this.setState({\n        info: response.data\n      });\n    })\n    .catch((error) => {\n      // handle error\n      console.log(error);\n      this.setState({\n        info: {},\n        error: \"Could not find module\"\n      });\n    });\n    event.preventDefault();\n  }\n\n  componentDidMount() {\n    axios.get(`https://api.nusmods.com/${this.state.year}/moduleList.json`)\n    .then((response) => {\n      this.setState({\n        modules: response.data\n      })\n    });\n  }\n\n  delMod(mod, mcs, sem, year) {\n    console.log(mod, mcs, sem, year);\n    const temp = JSON.parse(JSON.stringify(this.state.yourmods));\n    temp[year][sem] = temp[year][sem].filter(elem => elem.name !== mod);\n    this.setState((state, props) => ({\n      yourmods: temp,\n      mcs: state.mcs - mcs\n    }));\n  }\n\n  makePlan(obj, props) {\n    // Converts a plan object into html\n    if(obj.constructor === Array) {\n      return obj.map(elem => <tr><td><button onClick={() => this.delMod(elem.name, elem.mcs, props[1], props[0])}>{elem.name}</button></td></tr>);\n    } else {\n      return Object.keys(obj).map(key => <tr><td>{key}</td> <td>{this.makePlan(obj[key], props.concat([key]))}</td> </tr>);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          Your Mods: \n          {this.makePlan(this.state.yourmods, [])} <br/>\n          Your MCs: {this.state.mcs}<br/>\n        </div>\n        <div>\n          <form onSubmit={this.handleSubmit} onChange={this.handleChange}>\n            Module Code:\n            <input type=\"text\" name=\"name\" />\n            <input type=\"submit\" value=\"Search\" />\n            <button id=\"add-mod\" onClick={this.handleClick}>Add Module</button> <br/>\n            Semester: \n            <select id=\"select-sem\" onClick={this.handleClick}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n            </select>\n            Year:\n            <select id=\"select-year\" onClick={this.handleClick}>\n              {this.range(20).map(i => (<option value={(i + 2000) +  \"-\" + (i + 2001)}>{(i + 2000) +  \"-\" + (i + 2001)}</option>))}\n            </select>\n            <br/>\n            <span style={{color: \"red\"}}>{this.state.error}</span>\n            {this.state.autocomplete.map(result => <p>{result}</p>)}\n          </form>\n          {this.convert(this.filterObjProps([\"LockedModules\", \"ParsedPreclusion\", \"ParsedPrerequisite\", \"ModmavenTree\", \"History\", \"Timetable\", \"LecturePeriods\", \"TutorialPeriods\", \"CorsBiddingStats\", \"Workload\"],\n                                           this.state.info))}\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}